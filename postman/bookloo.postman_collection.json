{
	"info": {
		"_postman_id": "2410eda0-e4a1-497f-b7d6-7365727a6d10",
		"name": "bookloo",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "6220820"
	},
	"item": [
		{
			"name": "business",
			"item": [
				{
					"name": "Get all",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/businesses?longitude=77.17655995776941&latitude=12.146029226575278",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"businesses"
							],
							"query": [
								{
									"key": "longitude",
									"value": "77.17655995776941"
								},
								{
									"key": "latitude",
									"value": "12.146029226575278"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/businesses/65dc0c1950e000cb655b46d7",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"businesses",
								"65dc0c1950e000cb655b46d7"
							]
						}
					},
					"response": []
				},
				{
					"name": "post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "data",
									"value": "{\"name\":\"Achgal Yatri Nivas\",\"description\":\"Hotel near bus stand with A/C and parking facility\",\"address\":\"kollegal bustand\",\"city\":\"Kollegal\",\"state\":\"Karnataka\",\"country\":\"India\",\"pincode\":\"571440\",\"location\":{\"longitude\":77.109016,\"latitude\":12.152976},\"features\":[{\"name\":\"WIFI\",\"description\":\"Super speed wifi\",\"price\":0,\"discount\":0,\"currency\":\"INR\",\"category\":\"INTERNET\"}],\"type\":\"HOTEL\"}",
									"type": "text"
								},
								{
									"key": "files",
									"type": "file",
									"src": "/Users/sharathkumar/Library/Mobile Documents/com~apple~CloudDocs/Pics/Dps/9c76bd05-20d6-4d81-9541-a40ada921cfe.jpg"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/businesses",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"businesses"
							]
						}
					},
					"response": []
				},
				{
					"name": "put",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "data",
									"value": "{\"name\":\"Achgal Yatri Nivas\",\"description\":\"Hotel near bus stand with A/C and parking facility\",\"address\":\"opposite kollegal bustand\",\"city\":\"Kollegal\",\"state\":\"Karnataka\",\"country\":\"India\",\"pincode\":\"571440\",\"location\":{\"latitude\":12.152976,\"longitude\":77.109016},\"features\":[{\"name\":\"WIFI\",\"description\":\"Super speed wifi and lan is also available\",\"price\":0,\"currency\":\"INR\",\"discount\":0,\"category\":\"INTERNET\"}],\"type\":\"HOTEL\",\"mediaUrls\":[]}",
									"type": "text"
								},
								{
									"key": "files",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/businesses/65e15392754e81b928fe9fd5",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"businesses",
								"65e15392754e81b928fe9fd5"
							]
						}
					},
					"response": []
				},
				{
					"name": "get 1",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		},
		{
			"name": "asset",
			"item": [
				{
					"name": "post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "data",
									"value": "{\"discount\":0,\"price\":0,\"currency\":\"INR\",\"capacity\":2,\"roomNo\":101,\"type\":\"ROOM\",\"features\":[{\"name\":\"Free Wifi\",\"description\":\"WiFi is available in public areas and is free of charge.\",\"price\":0,\"discount\":0,\"currency\":\"INR\",\"category\":\"Internet\"}]}",
									"type": "text"
								},
								{
									"key": "files",
									"type": "file",
									"src": "/Users/sharathkumar/Library/Mobile Documents/com~apple~CloudDocs/Pics/Dps/9c76bd05-20d6-4d81-9541-a40ada921cfe.jpg"
								}
							]
						},
						"url": {
							"raw": "{{base_url}}/businesses/65df62d91c6cf78a37ceef75/assets",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"businesses",
								"65df62d91c6cf78a37ceef75",
								"assets"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": []
				},
				{
					"name": "update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/business/{{businessId}}/assets/{{assetId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"business",
								"{{businessId}}",
								"assets",
								"{{assetId}}"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/business/{{businessId}}/assets/{{assetId}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"business",
								"{{businessId}}",
								"assets",
								"{{assetId}}"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": []
				},
				{
					"name": "get all",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/businesses/65df62d91c6cf78a37ceef75/assets",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"businesses",
								"65df62d91c6cf78a37ceef75",
								"assets"
							]
						}
					},
					"response": []
				},
				{
					"name": "get 1",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		},
		{
			"name": "review",
			"item": [
				{
					"name": "post",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"review\": \"good\",\n  \"rating\": 3,\n  \"user\": {\n    \"id\": \"123\",\n    \"name\": \"sp\",\n    \"email\": \"sp@gmail.com\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/businesses/65e16152417befdd50a01081/reviews",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"businesses",
								"65e16152417befdd50a01081",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "get 1",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/businesses/65e16152417befdd50a01081/reviews/65e2a37f02074f4504c9a9aa",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"businesses",
								"65e16152417befdd50a01081",
								"reviews",
								"65e2a37f02074f4504c9a9aa"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/businesses/65e16152417befdd50a01081/reviews",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"businesses",
								"65e16152417befdd50a01081",
								"reviews"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}